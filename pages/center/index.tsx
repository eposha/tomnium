import {Loader} from '@/components/common/Loader';
import {ProfileCard} from '@/components/common/profile';
import {
  CourseCard,
  DashboardCard,
  EventCard,
  NewCourseCard,
} from '@/components/dashboard';
import {Chat, Consultation, Discount} from '@/components/dashboard/common';
import UserWidget from '@/components/dashboard/common/UserWidget';
import {useGetRooms} from '@/graph-hooks/chat/useRooms';
import {useConsultationsMy} from '@/graph-hooks/consultations';
import {useGetNextLessons} from '@/graph-hooks/lessons/useGetNextLessons';
import {useGetSales} from '@/graph-hooks/sales/useGetSales';
import {useStatisticsMy} from '@/graph-hooks/statistics/useStatisticsMy';
import {useUser} from '@/graph-hooks/user';
import {useWebinars} from '@/graph-hooks/webinars/useWebinars';
import {IConsultation} from '@/types/consultation';
import type {NextPage} from 'next';
import Head from 'next/head';
import Link from 'next/link';
import {Document, Lesson} from 'src/graphql.schema';
import {Media} from 'src/media-styles';
import {
  Box,
  Button,
  Container,
  Flex,
  FlexContainer,
  PageSubtitle,
  PageTitle,
  PageWrapper,
  Section,
} from 'styles/dashboard/common';
import {CardBox, CardsWrapper} from 'styles/dashboard/dashboard-card';
import {CourseWrapper} from 'styles/dashboard/dashboard-course';
import {GridEventContainer} from 'styles/dashboard/dashboard-event';

const Home: NextPage = () => {
  const courses = [1, 2];

  const {consultationsMy} = useConsultationsMy(true);
  const {statisticsMy} = useStatisticsMy();
  const {banners} = useGetSales();
  const lessonData = useGetNextLessons();
  const webinarsData = useWebinars();
  const roomData = useGetRooms({
    limit: 5,
  });
  const {user} = useUser();

  const {completedLessons, giftsReceived, monthsFromRegistration} =
    statisticsMy || {};

  return (
    <>
      <Head>
        <title>Woman Insight</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <PageWrapper>
        <Loader
          $isVisible={
            !(
              lessonData.loading == false &&
              webinarsData.loading == false &&
              roomData.loading == false
            )
          }
        />
        <Section>
          <Media greaterThan='xs'>
            <ProfileCard isPlain width='180px' />
          </Media>
          <Container>
            <Container>
              {user && (
                <PageTitle mb={10}>
                  {user.fullName
                    ? `Здравствуйте, ${user.fullName}!`
                    : 'Здравствуйте!'}
                </PageTitle>
              )}
              <PageSubtitle>
                Здесь вы можете посмотреть общую статистику и актуальную
                информацию по вашему аккаунту
              </PageSubtitle>
              <Media lessThan='md'>
                <UserWidget />
              </Media>
            </Container>
            <CardsWrapper>
              <DashboardCard
                title={'Месяцев мы вместе'}
                quantity={monthsFromRegistration}
              />
              <DashboardCard
                title={'Уроков пройдено'}
                quantity={completedLessons}
              />
              <DashboardCard
                title={'Получено подарков'}
                quantity={giftsReceived}
              />
              <CardBox> Мой прогресс</CardBox>
            </CardsWrapper>
          </Container>
        </Section>
        <Section>
          <Container>
            <Flex mb={20} />
            <Box width={190}>
              {!!banners.length && <Discount salesCount={banners.length} />}
            </Box>

            {consultationsMy?.map(
              (consultation: IConsultation, index: number) => (
                <Consultation key={index} consultation={consultation} />
              ),
            )}
          </Container>
          {!!lessonData?.nextLessons ? (
            <Container>
              <Flex mb={15}>
                <PageTitle>Мои курсы</PageTitle>
                <Link href='/courses' passHref>
                  <Button>Смотреть все</Button>
                </Link>
              </Flex>
              <FlexContainer>
                <CourseWrapper>
                  {lessonData?.nextLessons
                    .slice(0, 2)
                    ?.map((lesson: Lesson, index: number) => (
                      <CourseCard
                        title={lesson.title}
                        Course={lesson?.Course}
                        key={index}
                      />
                    ))}
                  {lessonData?.nextLessons.length > 2 && (
                    <NewCourseCard courses={courses} />
                  )}
                </CourseWrapper>
              </FlexContainer>
            </Container>
          ) : (
            'Авторизируйтесь для просмотра Ваших курсов'
          )}
        </Section>
        <Section>
          <Media greaterThan='md'>
            <Container>
              <Flex mb={15}>
                <PageTitle>Чат</PageTitle>
              </Flex>
              <Box width={180}>
                <Chat rooms={roomData?.data?.rooms?.Rooms} />
              </Box>
            </Container>
          </Media>
          <Container>
            <Flex mb={15}>
              <PageTitle>События</PageTitle>
              <Link href='/documents' passHref>
                <Button>Смотреть все</Button>
              </Link>
            </Flex>
            {webinarsData && (
              <GridEventContainer>
                {webinarsData?.webinars?.map(
                  (event: Document, index: number) => (
                    <EventCard
                      key={index}
                      title={event?.title}
                      id={event?.id}
                      startsAt={event?.startDate}
                      studentCount={event?.studentsCount}
                    />
                  ),
                )}
              </GridEventContainer>
            )}
          </Container>
          <Media lessThan='lg'>
            <Container>
              <Flex mb={15}>
                <PageTitle>Чат</PageTitle>
              </Flex>
              <Box width={900}>
                <Chat rooms={roomData?.data?.rooms?.Rooms} />
              </Box>
            </Container>
          </Media>
        </Section>
      </PageWrapper>
    </>
  );
};

export default Home;
